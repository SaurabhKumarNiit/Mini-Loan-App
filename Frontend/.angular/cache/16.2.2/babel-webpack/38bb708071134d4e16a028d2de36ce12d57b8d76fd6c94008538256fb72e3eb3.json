{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport jwt_decode from 'jwt-decode';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/service.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../services/auth.service\";\nimport * as i5 from \"@angular/material/snack-bar\";\nexport class LoginInterfaceComponent {\n  constructor(service, fb, router, authService, snackBar) {\n    this.service = service;\n    this.fb = fb;\n    this.router = router;\n    this.authService = authService;\n    this.snackBar = snackBar;\n    this.loginForm = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  get email() {\n    return this.loginForm.get(\"email\");\n  }\n  get password() {\n    return this.loginForm.get(\"password\");\n  }\n  ngOnInit() {}\n  logindata() {\n    this.service.loginCustomer(this.loginForm.value).subscribe(res => {\n      console.log(res);\n      this.data = res;\n      console.log(this.data.token);\n      this.decodeData = jwt_decode(this.data.token);\n      console.log(this.decodeData);\n      this.userEmail = this.decodeData.sub;\n      console.log(this.email);\n      localStorage.setItem('email', this.userEmail);\n      localStorage.setItem('jwt', this.data.token);\n      Swal.fire({\n        title: 'You are Logged In Successfully',\n        showClass: {\n          popup: 'animate__animated animate__fadeInDown'\n        },\n        hideClass: {\n          popup: 'animate__animated animate__fadeOutUp'\n        }\n      });\n      this.router.navigateByUrl('/home');\n      //  window.location.reload();\n    }, error => {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed...',\n        text: 'Please Enter Correct Email and Password!'\n      });\n    });\n  }\n  logindataOfAdmin() {\n    const data1 = this.loginForm.value;\n    // console.log(\"data1\",data1);\n    if (data1.email == 'admin@gmail.com' && data1.password == '@Admin123') {\n      this.service.loginAdmin(data1).subscribe(res => {\n        //  console.log(res);\n        this.data = res;\n        console.log(this.data.token);\n        this.decodeData = jwt_decode(this.data.token);\n        //  console.log(this.decodeData);\n        this.userEmail = this.decodeData.sub;\n        //  console.log(this.email);\n        localStorage.setItem('email', this.userEmail);\n        localStorage.setItem('jwt', this.data.token);\n        Swal.fire({\n          title: 'You are Logged In Successfully',\n          showClass: {\n            popup: 'animate__animated animate__fadeInDown'\n          },\n          hideClass: {\n            popup: 'animate__animated animate__fadeOutUp'\n          }\n        });\n        this.router.navigateByUrl('/admin');\n      }, error => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Failed...',\n          text: 'Please Enter Correct Email and Password!'\n        });\n      });\n    }\n  }\n}\n_class = LoginInterfaceComponent;\n_class.ɵfac = function LoginInterfaceComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ServiceService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.AuthService), i0.ɵɵdirectiveInject(i5.MatSnackBar));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login-interface\"]],\n  decls: 27,\n  vars: 1,\n  consts: [[1, \"bg-img\"], [1, \"content\"], [1, \"text-dark\"], [1, \"login-form\", 3, \"formGroup\"], [1, \"field\"], [1, \"fa\", \"fa-user\"], [\"type\", \"email\", \"required\", \"\", \"placeholder\", \"Email or Phone\", \"formControlName\", \"email\"], [1, \"field\", \"space\"], [1, \"fa\", \"fa-lock\"], [\"type\", \"password\", \"required\", \"\", \"placeholder\", \"Password\", \"formControlName\", \"password\", 1, \"pass-key\"], [\"id\", \"login\", 1, \"field\"], [\"type\", \"submit\", \"value\", \"LOGIN\", 3, \"click\"], [\"id\", \"adminlogin\", 1, \"field\"], [\"type\", \"submit\", \"value\", \"Admin Login\", 3, \"click\"], [1, \"signup\"], [\"href\", \"/register\"], [\"href\", \"\"]],\n  template: function LoginInterfaceComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"header\", 2);\n      i0.ɵɵtext(3, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 3)(5, \"div\", 4);\n      i0.ɵɵelement(6, \"span\", 5)(7, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 7);\n      i0.ɵɵelement(9, \"span\", 8)(10, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"br\")(12, \"br\");\n      i0.ɵɵelementStart(13, \"div\", 10)(14, \"input\", 11);\n      i0.ɵɵlistener(\"click\", function LoginInterfaceComponent_Template_input_click_14_listener() {\n        return ctx.logindata();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 12)(16, \"input\", 13);\n      i0.ɵɵlistener(\"click\", function LoginInterfaceComponent_Template_input_click_16_listener() {\n        return ctx.logindataOfAdmin();\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"div\", 14)(18, \"p\", 2);\n      i0.ɵɵtext(19, \"Don't have account?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"a\", 15);\n      i0.ɵɵtext(21, \"Signup Now\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 14)(23, \"p\", 2);\n      i0.ɵɵtext(24, \"Wan't to go back?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"a\", 16);\n      i0.ɵɵtext(26, \"Home\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","jwt_decode","Swal","LoginInterfaceComponent","constructor","service","fb","router","authService","snackBar","loginForm","group","email","required","password","get","ngOnInit","logindata","loginCustomer","value","subscribe","res","console","log","data","token","decodeData","userEmail","sub","localStorage","setItem","fire","title","showClass","popup","hideClass","navigateByUrl","error","icon","text","logindataOfAdmin","data1","loginAdmin","i0","ɵɵdirectiveInject","i1","ServiceService","i2","FormBuilder","i3","Router","i4","AuthService","i5","MatSnackBar","selectors","decls","vars","consts","template","LoginInterfaceComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","LoginInterfaceComponent_Template_input_click_14_listener","LoginInterfaceComponent_Template_input_click_16_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\kumar\\Desktop\\techdome\\Frontend\\mini-loan-app\\src\\app\\login-interface\\login-interface.component.ts","C:\\Users\\kumar\\Desktop\\techdome\\Frontend\\mini-loan-app\\src\\app\\login-interface\\login-interface.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder,Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport jwt_decode from 'jwt-decode';\nimport { AuthService } from '../services/auth.service';\nimport Swal from 'sweetalert2';\nimport { ServiceService } from '../services/service.service';\n\n@Component({\n  selector: 'app-login-interface',\n  templateUrl: './login-interface.component.html',\n  styleUrls: ['./login-interface.component.css']\n})\nexport class LoginInterfaceComponent implements  OnInit {\n  \n \n  constructor(private service : ServiceService,private fb : FormBuilder, private router : Router\n    ,private authService:AuthService,private snackBar:MatSnackBar) { }\n\n  loginForm = this.fb.group({\n    email: ['',Validators.required],\n    password: ['',Validators.required]\n  })\n  get email() { return this.loginForm.get(\"email\") }\n  get password() { return this.loginForm.get(\"password\") }\n\n  ngOnInit(): void {\n  }\n \n  data: any;\n  decodeData: any;\n  userEmail : any;\n\n  logindata(){\n    this.service.loginCustomer(this.loginForm.value).subscribe(\n      res => {\n             console.log(res);\n             this.data = res;\n\n             console.log(this.data.token);\n             this.decodeData = jwt_decode(this.data.token);\n             console.log(this.decodeData);\n\n             this.userEmail = this.decodeData.sub;\n             console.log(this.email);\n             localStorage.setItem('email',this.userEmail);\n             localStorage.setItem('jwt',this.data.token);\n\n             Swal.fire({\n              title: 'You are Logged In Successfully',\n              showClass: {\n                popup: 'animate__animated animate__fadeInDown'\n              },\n              hideClass: {\n                popup: 'animate__animated animate__fadeOutUp'\n              }\n            })\n\n            this.router.navigateByUrl('/home');\n\n            //  window.location.reload();\n     },\n     error=>\n     {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed...',\n        text: 'Please Enter Correct Email and Password!',\n      })\n     }\n     )   \n  }\n\n\n  logindataOfAdmin(){\n    const data1 = this.loginForm.value;\n    // console.log(\"data1\",data1);\n    if(data1.email =='admin@gmail.com' && data1.password =='@Admin123'){\n      this.service.loginAdmin(data1).subscribe(\n        (res:any) => {\n              //  console.log(res);\n               this.data = res;\n  \n               console.log(this.data.token);\n               this.decodeData = jwt_decode(this.data.token);\n              //  console.log(this.decodeData);\n  \n               this.userEmail = this.decodeData.sub;\n              //  console.log(this.email);\n               localStorage.setItem('email',this.userEmail);\n               localStorage.setItem('jwt',this.data.token);\n  \n               Swal.fire({\n                title: 'You are Logged In Successfully',\n                showClass: {\n                  popup: 'animate__animated animate__fadeInDown'\n                },\n                hideClass: {\n                  popup: 'animate__animated animate__fadeOutUp'\n                }\n                });\n  \n               this.router.navigateByUrl('/admin');\n       },\n       error=>{\n        Swal.fire({\n          icon: 'error',\n          title: 'Failed...',\n          text: 'Please Enter Correct Email and Password!',\n        })\n       }\n       )\n    }\n    \n     \n  }\n  \n\n}\n","<!-- <app-header></app-header> -->\n\n\n\n\n\n<div class=\"bg-img\">\n    <div class=\"content\">\n       <header class=\"text-dark\">Login</header>\n       <form  class=\"login-form\" [formGroup]=\"loginForm\">\n          <div class=\"field\">\n             <span class=\"fa fa-user\"></span>\n             <input type=\"email\" required placeholder=\"Email or Phone\" formControlName=\"email\">\n          </div>\n          <div class=\"field space\">\n             <span class=\"fa fa-lock\"></span>\n             <input type=\"password\" class=\"pass-key\" required placeholder=\"Password\" formControlName=\"password\">\n            \n          </div>\n      \n          <br><br>\n          <div class=\"field\" id=\"login\">\n            <input  type=\"submit\" (click)=\"logindata()\" value=\"LOGIN\">\n         </div>\n          <div class=\"field\" id=\"adminlogin\">\n            <input type=\"submit\" (click)=\"logindataOfAdmin()\" value=\"Admin Login\">\n         </div>\n       </form>\n\n       <div class=\"signup\">\n        <p class=\"text-dark\">Don't have account?</p>  \n          <a href=\"/register\">Signup Now</a>\n       </div>\n       <div class=\"signup\">\n         <p class=\"text-dark\">Wan't to go back?</p>\n         \n         <a href=\"\">Home</a>\n      </div>\n    </div>\n </div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}