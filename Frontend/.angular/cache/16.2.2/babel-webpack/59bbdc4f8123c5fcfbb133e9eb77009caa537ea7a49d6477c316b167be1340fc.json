{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthService","constructor","http","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\kumar\\Desktop\\techdome\\Frontend\\mini-loan-app\\src\\app\\services\\auth.service.ts"],"sourcesContent":["// auth.service.ts\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private http: HttpClient) {}\n\n  // login(username: string, password: string): Observable<any> {\n  //   // Implement user authentication here (e.g., send POST request to the backend)\n  // }\n\n  // register(user: any): Observable<any> {\n  //   // Implement user registration here (e.g., send POST request to the backend)\n  // }\n\n  // logout(): void {\n  //   // Implement logout logic\n  // }\n\n  // isAuthenticated(): boolean {\n  //   // Check if the user is authenticated\n  // }\n  \n}\n"],"mappings":";;;AASA,OAAM,MAAOA,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;;SAD5BF,WAAW;;mBAAXA,MAAW,EAAAG,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAXN,MAAW;EAAAO,OAAA,EAAXP,MAAW,CAAAQ,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}