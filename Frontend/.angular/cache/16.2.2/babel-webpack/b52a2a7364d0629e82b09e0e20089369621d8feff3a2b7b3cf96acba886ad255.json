{"ast":null,"code":"var _class;\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/service.service\";\nimport * as i2 from \"@angular/router\";\nexport class AdminComponent {\n  constructor(regService, router) {\n    this.regService = regService;\n    this.router = router;\n    this.orders = [];\n    this.deleteOrder = {};\n  }\n  ngOnInit() {\n    this.regService.getCustomers().subscribe({\n      next: data => {\n        this.orders = data;\n      },\n      error: e => {\n        alert(\"Failed due to Network Error\");\n      }\n    });\n  }\n  logOut() {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, LogOut!'\n    }).then(result => {\n      if (result.isConfirmed) {\n        Swal.fire('LogOut!', 'Your are Logout...', 'success'), localStorage.removeItem('email'), this.router.navigateByUrl('/login'), console.log(\"Log Out Success\");\n      }\n    });\n  }\n}\n_class = AdminComponent;\n_class.ɵfac = function AdminComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ServiceService), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-admin\"]],\n  decls: 2,\n  vars: 0,\n  template: function AdminComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"admin works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Swal","AdminComponent","constructor","regService","router","orders","deleteOrder","ngOnInit","getCustomers","subscribe","next","data","error","e","alert","logOut","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","localStorage","removeItem","navigateByUrl","console","log","i0","ɵɵdirectiveInject","i1","ServiceService","i2","Router","selectors","decls","vars","template","AdminComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\kumar\\Desktop\\techdome\\Frontend\\mini-loan-app\\src\\app\\admin\\admin.component.ts","C:\\Users\\kumar\\Desktop\\techdome\\Frontend\\mini-loan-app\\src\\app\\admin\\admin.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Customer } from 'src/models/Customer';\nimport Swal from 'sweetalert2';\nimport { ServiceService } from '../services/service.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\n\n\nexport class AdminComponent {\n\n  \n\n\n  orders: Customer[] = [];\n\n  deleteOrder:Customer={}\n\n  submitStatus:any;\n\n  constructor(private regService:ServiceService,private router:Router) {\n   }\n\n  ngOnInit(): void {\n    this.regService.getCustomers().subscribe({\n      next:data=>{\n        this.orders=data;\n      },\n      error:e=>{\n      alert(\"Failed due to Network Error\");\n      }\n    });\n  }\n\n  logOut(){\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, LogOut!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'LogOut!',\n          'Your are Logout...',\n          'success'\n        ),\n        localStorage.removeItem('email'),\n          this.router.navigateByUrl('/login'),\n          console.log(\"Log Out Success\")\n      }\n    })\n   \n  }\n}\n","<p>admin works!</p>\n"],"mappings":";AAGA,OAAOA,IAAI,MAAM,aAAa;;;;AAU9B,OAAM,MAAOC,cAAc;EAWzBC,YAAoBC,UAAyB,EAASC,MAAa;IAA/C,KAAAD,UAAU,GAAVA,UAAU;IAAwB,KAAAC,MAAM,GAANA,MAAM;IAN5D,KAAAC,MAAM,GAAe,EAAE;IAEvB,KAAAC,WAAW,GAAU,EAAE;EAKtB;EAEDC,QAAQA,CAAA;IACN,IAAI,CAACJ,UAAU,CAACK,YAAY,EAAE,CAACC,SAAS,CAAC;MACvCC,IAAI,EAACC,IAAI,IAAE;QACT,IAAI,CAACN,MAAM,GAACM,IAAI;MAClB,CAAC;MACDC,KAAK,EAACC,CAAC,IAAE;QACTC,KAAK,CAAC,6BAA6B,CAAC;MACpC;KACD,CAAC;EACJ;EAEAC,MAAMA,CAAA;IAEJf,IAAI,CAACgB,IAAI,CAAC;MACRC,KAAK,EAAE,eAAe;MACtBC,IAAI,EAAE,mCAAmC;MACzCC,IAAI,EAAE,SAAS;MACfC,gBAAgB,EAAE,IAAI;MACtBC,kBAAkB,EAAE,SAAS;MAC7BC,iBAAiB,EAAE,MAAM;MACzBC,iBAAiB,EAAE;KACpB,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAI;MACjB,IAAIA,MAAM,CAACC,WAAW,EAAE;QACtB1B,IAAI,CAACgB,IAAI,CACP,SAAS,EACT,oBAAoB,EACpB,SAAS,CACV,EACDW,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC,EAC9B,IAAI,CAACxB,MAAM,CAACyB,aAAa,CAAC,QAAQ,CAAC,EACnCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;;IAEpC,CAAC,CAAC;EAEJ;;SAhDW9B,cAAc;;mBAAdA,MAAc,EAAA+B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;QAAdpC,MAAc;EAAAqC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCb3BX,EAAA,CAAAa,cAAA,QAAG;MAAAb,EAAA,CAAAc,MAAA,mBAAY;MAAAd,EAAA,CAAAe,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}